head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2010.01.31.03.55.37;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.29.06.41.40;	author alex;	state Exp;
branches;
next	;


desc
@GUI is ready.
Add event handlers for buttons.
Implemnents the algorithms and make it work.
@


1.2
log
@Add event handlers for 'c' and '='.
We need to add handlers for operator '+', '-', '*', '/'.
We have added handlers for digits.
@
text
@/*
 * $Header: /home/alex/work/gtk-work/gtk-examples/widget/calculator.c,v 1.1 2010/01/29 06:41:40 alex Exp alex $
 * $Author: alex $
 * $Date: 2010/01/29 06:41:40 $
 * RCS id: $Id: calculator.c,v 1.1 2010/01/29 06:41:40 alex Exp alex $
 * $Revision: 1.1 $
 * $Log: calculator.c,v $
 * Revision 1.1  2010/01/29 06:41:40  alex
 * Initial revision
 *
 */
#include <gtk/gtk.h>
#include <string.h>
#include <stdlib.h>

#define SIZE 16

static const char *labels[] = {
  "+", "-", "*", "/",
  "6", "7", "8", "9",
  "2", "3", "4", "5",
  "0", "1", "=", "C"
};

typedef struct {
  GtkEntry *entry;
} Data;

static Data data;
static int result = 0;

static void digit_clicked( GtkButton *button, const char *digit );
static void clear_clicked( GtkButton *button, GtkEntry *entry );
static void equal_clicked( GtkButton *button, GtkEntry *entry );

/**
 * Create a simple pocket calculator
 */
int main( int argc, char **argv ) {
  gtk_init( &argc, &argv );
  GtkWidget *window = gtk_window_new( GTK_WINDOW_TOPLEVEL );
  gtk_window_set_title( GTK_WINDOW( window ), "Calculator" );
  gtk_widget_set_size_request( window, 320, 240 );
  gtk_container_set_border_width( GTK_CONTAINER( window ), 10 );

  GtkWidget *input_entry = gtk_entry_new();
  gtk_entry_set_text( GTK_ENTRY( input_entry ), "0" );
  gtk_entry_set_alignment( GTK_ENTRY( input_entry ), 1.0f );
  data.entry = GTK_ENTRY( input_entry );

  GtkWidget *buttons[ SIZE ];
  int i;
  for ( i = 0; i < SIZE; i++ ) {
    buttons[ i ] = gtk_button_new_with_label( labels[ i ]  );
  }

  /* Connect events to handlers */
  g_signal_connect( G_OBJECT( window ), "destroy", G_CALLBACK( gtk_main_quit ), NULL );
  for ( i = 4; i <= 13; i++ ) {
    g_signal_connect( G_OBJECT( buttons[ i ] ), "clicked", G_CALLBACK( digit_clicked ),
	  (gpointer) labels[ i ] );
  }
  g_signal_connect( G_OBJECT( buttons[ SIZE - 1 ] ), "clicked", G_CALLBACK( clear_clicked ),
      (gpointer) input_entry );
  g_signal_connect( G_OBJECT( buttons[ SIZE - 2 ] ), "clicked", G_CALLBACK( equal_clicked ),
      (gpointer) input_entry );

  GtkWidget *hboxes[ 5 ];
  for ( i = 0; i < 5; i++ ) {
    hboxes[ i ] = gtk_hbox_new( TRUE, 1 );
  }
  gtk_box_pack_start( GTK_BOX( hboxes[ 0 ] ), input_entry, TRUE, TRUE, 5 );
  int j = 0;
  for ( i = 1; i < 5; i++ ) {
    for ( j = 0; j < 4; j++ ) {
      gtk_box_pack_start( GTK_BOX( hboxes[ i ] ), buttons[ (i-1)*4 + j ], TRUE, TRUE, 5 );
    }
  }

  GtkWidget *vbox = gtk_vbox_new( TRUE, 1 );
  for ( i = 0; i < 5; i++ ) {
    gtk_box_pack_start( GTK_BOX( vbox ), hboxes[ i ], TRUE, TRUE, 5 );
  }

  gtk_container_add( GTK_CONTAINER( window ), vbox );
  gtk_widget_show_all( window );
  gtk_main();

  return 0;
}

/*
 * This function will be called when one of digits is clicked. We add this digit
 * on the rear of current buffer in text entry.
 */
static void digit_clicked( GtkButton *button, const char *digit ) {
  const char *buf = gtk_entry_get_text( data.entry );
  if ( strcmp( buf, "0" ) == 0 ) {
    gtk_entry_set_text( data.entry, digit );
  } else {
    gtk_entry_append_text( data.entry, digit );
  }
}

/*
 * When the clear button 'C' is clicked, we must clear all the things in input
 * entry. This is, probably, a start of new series calculation.
 */
static void clear_clicked( GtkButton *button, GtkEntry *entry ) {
  gtk_entry_set_text( entry, "0" );
}

/*
 * When the equal button '=' is clicked, we fetch the current result and show it
 * in the entry.
 */
static void equal_clicked( GtkButton *button, GtkEntry *entry ) {
  char *buf = (char *) malloc( 512 );
  sprintf( buf, "%d", result );
  gtk_entry_set_text( entry, buf );
  result = 0;
}
/* End of $Source: /home/alex/work/gtk-work/gtk-examples/widget/calculator.c,v $ */
@


1.1
log
@Initial revision
@
text
@d2 9
a10 6
 * $Header$
 * $Author$
 * $Date$
 * RCS id: $Id$
 * $Revision$
 * $Log$
d13 2
d25 11
d47 4
d59 9
d91 33
a123 1
/* End of $Source$ */
@
